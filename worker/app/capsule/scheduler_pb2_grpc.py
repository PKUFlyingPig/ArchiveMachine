# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from capsule import common_pb2 as capsule_dot_common__pb2
from capsule import scheduler_pb2 as capsule_dot_scheduler__pb2


class SchedulerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TryLogin = channel.unary_unary(
                '/capsule.Scheduler/TryLogin',
                request_serializer=capsule_dot_common__pb2.LoginRequest.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.ConfirmLogin = channel.unary_unary(
                '/capsule.Scheduler/ConfirmLogin',
                request_serializer=capsule_dot_common__pb2.LoginConfirmation.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.ListSnapshots = channel.unary_unary(
                '/capsule.Scheduler/ListSnapshots',
                request_serializer=capsule_dot_scheduler__pb2.ListSnapshotsRequest.SerializeToString,
                response_deserializer=capsule_dot_scheduler__pb2.Snapshots.FromString,
                )
        self.GetSnapshot = channel.unary_unary(
                '/capsule.Scheduler/GetSnapshot',
                request_serializer=capsule_dot_common__pb2.Snapshot.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Content.FromString,
                )
        self.GetUserData = channel.unary_unary(
                '/capsule.Scheduler/GetUserData',
                request_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.UserData.FromString,
                )
        self.CreateArticle = channel.unary_unary(
                '/capsule.Scheduler/CreateArticle',
                request_serializer=capsule_dot_scheduler__pb2.CreateArticleRequest.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Article.FromString,
                )
        self.DeleteArticle = channel.unary_unary(
                '/capsule.Scheduler/DeleteArticle',
                request_serializer=capsule_dot_scheduler__pb2.DeleteArticleRequest.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.ChangeArticleTitle = channel.unary_unary(
                '/capsule.Scheduler/ChangeArticleTitle',
                request_serializer=capsule_dot_scheduler__pb2.ChangeArticleTitleRequest.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.RemoveSnapshotFromArticle = channel.unary_unary(
                '/capsule.Scheduler/RemoveSnapshotFromArticle',
                request_serializer=capsule_dot_scheduler__pb2.RemoveSnapshotFromArticleRequest.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.GetArticleSnapshots = channel.unary_unary(
                '/capsule.Scheduler/GetArticleSnapshots',
                request_serializer=capsule_dot_scheduler__pb2.GetArticleSnapshotsRequest.SerializeToString,
                response_deserializer=capsule_dot_scheduler__pb2.GetArticleSnapshotsResponse.FromString,
                )
        self.Capture = channel.unary_unary(
                '/capsule.Scheduler/Capture',
                request_serializer=capsule_dot_scheduler__pb2.CaptureRequest.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.GetActiveTasks = channel.unary_stream(
                '/capsule.Scheduler/GetActiveTasks',
                request_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=capsule_dot_scheduler__pb2.CurrentTasks.FromString,
                )
        self.MarkAllAsRead = channel.unary_unary(
                '/capsule.Scheduler/MarkAllAsRead',
                request_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.RegisterWorker = channel.unary_unary(
                '/capsule.Scheduler/RegisterWorker',
                request_serializer=capsule_dot_common__pb2.Endpoint.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )
        self.RegisterStorage = channel.unary_unary(
                '/capsule.Scheduler/RegisterStorage',
                request_serializer=capsule_dot_common__pb2.Endpoint.SerializeToString,
                response_deserializer=capsule_dot_common__pb2.Empty.FromString,
                )


class SchedulerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TryLogin(self, request, context):
        """Wechat login
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSnapshots(self, request, context):
        """Public snapshots
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSnapshot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserData(self, request, context):
        """User interface
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateArticle(self, request, context):
        """Articles
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteArticle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeArticleTitle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveSnapshotFromArticle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetArticleSnapshots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Capture(self, request, context):
        """Tasks
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkAllAsRead(self, request, context):
        """Notifications
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterWorker(self, request, context):
        """Workers and Storage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterStorage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TryLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.TryLogin,
                    request_deserializer=capsule_dot_common__pb2.LoginRequest.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'ConfirmLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmLogin,
                    request_deserializer=capsule_dot_common__pb2.LoginConfirmation.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'ListSnapshots': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSnapshots,
                    request_deserializer=capsule_dot_scheduler__pb2.ListSnapshotsRequest.FromString,
                    response_serializer=capsule_dot_scheduler__pb2.Snapshots.SerializeToString,
            ),
            'GetSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSnapshot,
                    request_deserializer=capsule_dot_common__pb2.Snapshot.FromString,
                    response_serializer=capsule_dot_common__pb2.Content.SerializeToString,
            ),
            'GetUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserData,
                    request_deserializer=capsule_dot_common__pb2.Empty.FromString,
                    response_serializer=capsule_dot_common__pb2.UserData.SerializeToString,
            ),
            'CreateArticle': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateArticle,
                    request_deserializer=capsule_dot_scheduler__pb2.CreateArticleRequest.FromString,
                    response_serializer=capsule_dot_common__pb2.Article.SerializeToString,
            ),
            'DeleteArticle': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteArticle,
                    request_deserializer=capsule_dot_scheduler__pb2.DeleteArticleRequest.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'ChangeArticleTitle': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeArticleTitle,
                    request_deserializer=capsule_dot_scheduler__pb2.ChangeArticleTitleRequest.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'RemoveSnapshotFromArticle': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveSnapshotFromArticle,
                    request_deserializer=capsule_dot_scheduler__pb2.RemoveSnapshotFromArticleRequest.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetArticleSnapshots': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArticleSnapshots,
                    request_deserializer=capsule_dot_scheduler__pb2.GetArticleSnapshotsRequest.FromString,
                    response_serializer=capsule_dot_scheduler__pb2.GetArticleSnapshotsResponse.SerializeToString,
            ),
            'Capture': grpc.unary_unary_rpc_method_handler(
                    servicer.Capture,
                    request_deserializer=capsule_dot_scheduler__pb2.CaptureRequest.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetActiveTasks': grpc.unary_stream_rpc_method_handler(
                    servicer.GetActiveTasks,
                    request_deserializer=capsule_dot_common__pb2.Empty.FromString,
                    response_serializer=capsule_dot_scheduler__pb2.CurrentTasks.SerializeToString,
            ),
            'MarkAllAsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkAllAsRead,
                    request_deserializer=capsule_dot_common__pb2.Empty.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'RegisterWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterWorker,
                    request_deserializer=capsule_dot_common__pb2.Endpoint.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
            'RegisterStorage': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterStorage,
                    request_deserializer=capsule_dot_common__pb2.Endpoint.FromString,
                    response_serializer=capsule_dot_common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'capsule.Scheduler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Scheduler(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TryLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/TryLogin',
            capsule_dot_common__pb2.LoginRequest.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/ConfirmLogin',
            capsule_dot_common__pb2.LoginConfirmation.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSnapshots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/ListSnapshots',
            capsule_dot_scheduler__pb2.ListSnapshotsRequest.SerializeToString,
            capsule_dot_scheduler__pb2.Snapshots.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/GetSnapshot',
            capsule_dot_common__pb2.Snapshot.SerializeToString,
            capsule_dot_common__pb2.Content.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/GetUserData',
            capsule_dot_common__pb2.Empty.SerializeToString,
            capsule_dot_common__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateArticle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/CreateArticle',
            capsule_dot_scheduler__pb2.CreateArticleRequest.SerializeToString,
            capsule_dot_common__pb2.Article.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteArticle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/DeleteArticle',
            capsule_dot_scheduler__pb2.DeleteArticleRequest.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeArticleTitle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/ChangeArticleTitle',
            capsule_dot_scheduler__pb2.ChangeArticleTitleRequest.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveSnapshotFromArticle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/RemoveSnapshotFromArticle',
            capsule_dot_scheduler__pb2.RemoveSnapshotFromArticleRequest.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetArticleSnapshots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/GetArticleSnapshots',
            capsule_dot_scheduler__pb2.GetArticleSnapshotsRequest.SerializeToString,
            capsule_dot_scheduler__pb2.GetArticleSnapshotsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Capture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/Capture',
            capsule_dot_scheduler__pb2.CaptureRequest.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/capsule.Scheduler/GetActiveTasks',
            capsule_dot_common__pb2.Empty.SerializeToString,
            capsule_dot_scheduler__pb2.CurrentTasks.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkAllAsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/MarkAllAsRead',
            capsule_dot_common__pb2.Empty.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/RegisterWorker',
            capsule_dot_common__pb2.Endpoint.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterStorage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/capsule.Scheduler/RegisterStorage',
            capsule_dot_common__pb2.Endpoint.SerializeToString,
            capsule_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
